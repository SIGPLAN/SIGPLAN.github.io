2025:
- Awardee: Simon Peyton Jones 
  Citation: |

    Simon's contributions to education are extraordinary. He has arguably done more to advance the cause of computing education in UK schools than any other individual. As a founder of the Computing At School initiative, and subsequently as Chair of the National Centre for Computing Education, Simon led a campaign to recognise computer science as a foundational discipline in the UK national curriculum. This effort has seen outdated ICT instruction replaced with a modern curriculum focused on algorithms, programming, and computational thinking, equipping students with both theoretical and practical skills. Simon's advocacy, tireless enthusiasm, and ability to unite policymakers, educators, and industry played a central role in this reform, which continues to serve as a model for other countries. In recognition of these contributions, Simon was made an Officer of the Order of the British Empire (OBE) in 2022.

    Simon is best known within the SIGPLAN community for his major contributions to the design and implementation of the Haskell programming language -- a language that has itself played a crucial role in computer science education. Its clean semantics and powerful type system make it ideal for introducing students to key concepts of functional programming such as higher-order functions, immutability, and lazy evaluation. Universities around the world use Haskell as a vehicle for teaching foundational topics in programming structures, language design, compiler implementation, and type theory, often relying on Simon's 1987 textbook, "The Implementation of Functional Programming Languages". By providing a practical yet cutting-edge platform, Haskell has helped students and researchers explore advanced ideas while grounding their understanding in real-world applications. Beyond academia, Haskell has influenced the design of other languages, ensuring its educational legacy continues to shape the field.

    Finally, Simon is well known as a vibrant speaker. His presentations are characterized by clarity, energy, and accessibility. As a result, he has long been a sought-after speaker at conferences and a frequent contributor to summer schools and mentoring workshops. His advice on how to give talks and write research papers has been invaluable to many students and researchers, helping them communicate their ideas effectively and maximise their impact.

    Through his work on curriculum development, programming language innovation, technical communication, and career advice, Simon has made direct and lasting impact on the education of programmers and programming language researchers throughout the world, as well as millions of UK schoolchildren. His dedication and achievements make him an exceptionally deserving candidate for the SIGPLAN Distinguished Educator Award.

    * Selection committee: Niki Vazou, Will Crichton, John Wickerson, Michael Greenberg, Johan Jeuring

2023:
- Awardee: Kathi Fisler and Shriram Krishnamurthi
  Citation: |

    Professors Fisler and Krishnamurthi have made significant and
    sustained pedagogical contributions to Programming Languages over
    the last two decades. Both of them have a long track record of
    being SIGPLAN community leaders in PL education, from writing
    well-known textbooks to making significant contributions to CS
    Curriculum Guidelines. .. With Emmanuel Schanzer, they are
    co-founders of Bootstrap, a national program that uses functional
    programming to integrate data science and computing into math,
    science, and social studies classes. …  In short, their innovative
    work has paved the way for a new generation of computer scientists
    and teachers and has helped to make computing education more
    accessible, engaging, and effective for all.

    * Selection committee: Işil Dillig, Graham Hutton, Alastair Donaldson, Elisa Gonzalez Boix, Jeremy Gibbons

2021:
- Awardee: Benjamin Pierce
  Citation: |
    Benjamin Pierce is an absolutely exceptional educator and mentor. Benjamin
    is passionate about providing students with the clearest explanations and
    the most insight-provoking exercises, and he works tirelessly to produce
    them.  Benjamin's contributions to programming languages education are truly
    inspiring, both to students who use his books, and to teachers. His Types
    and Programming Languages book covering untyped lambda calculus to System F,
    subtyping, objects, mutable state, and recursive types, published in 2002,
    is widely used in advanced undergraduate and graduate-level courses. The
    books published prior to Benjamin’s are targeted at a more mathematical
    audience; Benjamin’s starts with programmers. Its successor, Advanced Types
    and Programming Languages, edited by Benjamin, dives deeper into:
    substructural logic, logical relations, dependent types, module systems,
    and type inference.  Together these textbooks present the very
    foundations of programming languages research in a beautifully written and
    accessible way. More recently, Benjamin's educational contributions have
    shifted online, to the novel, and very successful, Software Foundations
    series.  These volumes, again written with clarity and great
    accessibility, explain the foundations of logic and programming languages
    semantics through the lens of formal verification.  Part textbook and part
    interactive proof-script, they use the Coq theorem prover as a vehicle for
    students to learn about propositional logic, induction principles, Hoare
    logic, and lambda calculus, among many other topics.  Initiated as a
    course offered at the University of Pennsylvania, the Software Foundations
    has grown into a collaborative, multi-institution community effort.
    Benjamin is also a kind and attentive mentor, and generous and encouraging
    to students via events like the DeepSpec summer school, and the PL
    Mentoring Workshops.
